// <auto-generated />
using BowlingParkMicroService.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BowlingParkMicroService.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BowlingParkMicroService.Models.Entities.BowlingAlley", b =>
                {
                    b.Property<string>("BowlingParkId")
                        .HasColumnType("text");

                    b.Property<int>("AlleyNumber")
                        .HasColumnType("integer");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("BowlingParkId", "AlleyNumber");

                    b.ToTable("bowlingAlley");
                });

            modelBuilder.Entity("BowlingParkMicroService.Models.Entities.BowlingPark", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ManagerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("bowlingPark");
                });

            modelBuilder.Entity("BowlingParkMicroService.Models.Entities.BowlingAlley", b =>
                {
                    b.HasOne("BowlingParkMicroService.Models.Entities.BowlingPark", "BowlingPark")
                        .WithMany("BowlingAlleys")
                        .HasForeignKey("BowlingParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BowlingPark");
                });

            modelBuilder.Entity("BowlingParkMicroService.Models.Entities.BowlingPark", b =>
                {
                    b.Navigation("BowlingAlleys");
                });
#pragma warning restore 612, 618
        }
    }
}
